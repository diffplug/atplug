plugins {
	id 'com.diffplug.blowdryer'
	id 'com.diffplug.spotless-changelog'
}

repositories { mavenCentral() }

group = 干.proj('maven_group', 'the maven group, recommend com.diffplug')
allprojects {
	apply from: 干.file('base/changelog.gradle')
}
apply from: 干.file('spotless/freshmark.gradle')
apply from: 干.file('base/sonatype.gradle')

String VER_JUNIT_JUPITER = '5.8.2'
subprojects {
	apply from: 干.file('base/java8.gradle')
	apply from: 干.file('spotless/java.gradle')
	repositories { mavenCentral() }

	String VER_DURIAN = '1.2.0'
	if (it.name == 'autosgi-runtime') {
		ext.kotlin_jvmTarget = '1.8'
		apply from: 干.file('base/kotlin.gradle')
		apply plugin: 'java-library'
		apply plugin: 'kotlinx-serialization'
		ext.maven_name = 'AutOSGi runtime'
		dependencies {
			implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"
			testImplementation "com.diffplug.durian:durian-core:${VER_DURIAN}"
			testImplementation "org.junit.jupiter:junit-jupiter-api:${VER_JUNIT_JUPITER}"
			testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${VER_JUNIT_JUPITER}"
		}
		apply plugin: 'com.diffplug.eclipse.mavencentral'
		eclipseMavenCentral {
			release '4.22.0', {
				constrainTransitivesToThisRelease()
				api 'org.eclipse.osgi'
			}
		}
	} else if (it.name == 'autosgi-osgi') {
		apply plugin: 'java-library'
		ext.maven_name = 'AutOSGi for OSGi'
		dependencies {
			implementation "com.diffplug.durian:durian-core:${VER_DURIAN}"
			implementation "com.diffplug.durian:durian-collect:${VER_DURIAN}"
			implementation "com.diffplug.durian:durian-io:${VER_DURIAN}"
			testImplementation "org.junit.jupiter:junit-jupiter-api:${VER_JUNIT_JUPITER}"
			testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${VER_JUNIT_JUPITER}"
		}
		apply plugin: 'com.diffplug.eclipse.mavencentral'
		eclipseMavenCentral {
			release '4.22.0', {
				constrainTransitivesToThisRelease()
				api 'org.eclipse.osgi'
			}
		}
	} else if (it.name == 'autosgi-test-harness') {
		apply plugin: 'java-library'
		ext.maven_name='AutOSGi test harness'
		dependencies {
			api "org.junit.jupiter:junit-jupiter-api:${VER_JUNIT_JUPITER}"
			implementation project(':autosgi-runtime')
			implementation "com.diffplug.durian:durian-core:${VER_DURIAN}"
			implementation "com.diffplug.durian:durian-concurrent:${VER_DURIAN}"
			implementation "com.diffplug.durian:durian-collect:${VER_DURIAN}"
		}
	} else if (it.name == 'autosgi-plugin-gradle') {
		ext.maven_name='AutOSGi metadata generation Gradle plugin'
		apply from: 干.file('base/gradle-plugin.gradle')
		dependencies {
			implementation "com.diffplug.durian:durian-core:${VER_DURIAN}"
			implementation "com.diffplug.durian:durian-io:${VER_DURIAN}"
			implementation 'com.diffplug.gradle:goomph:3.35.0'
			implementation "org.ow2.asm:asm:9.2"
			testImplementation "org.junit.jupiter:junit-jupiter-api:${VER_JUNIT_JUPITER}"
			testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${VER_JUNIT_JUPITER}"
		}
	} else {
		throw new IllegalArgumentException("Unexpected project " + it.name)
	}
	ext.maven_desc = ext.maven_name

	tasks.named('test', Test) {
		useJUnitPlatform {}
	}

	// it all needs to get published and formatted
	apply from: 干.file('base/maven.gradle')
	apply from: 干.file('base/sonatype.gradle')
}
