plugins {
	id 'com.diffplug.blowdryer'
	id 'com.diffplug.spotless-changelog'
}

repositories { mavenCentral() }

group = 干.proj('maven_group', 'the maven group, recommend com.diffplug')
allprojects {
	apply from: 干.file('base/changelog.gradle')
}
apply from: 干.file('spotless/freshmark.gradle')
apply from: 干.file('base/sonatype.gradle')

String VER_JUNIT_JUPITER = '5.8.2'
subprojects {
	apply from: 干.file('base/kotlin.gradle')
	apply from: 干.file('spotless/java.gradle')
	repositories { mavenCentral() }

	if (it.name == 'plug-runtime') {
		ext.maven_name='DiffPlug Plugin Runtime'
		ext.maven_desc='Runtime for the DiffPlug Plugin System'

		//		apply plugin: 'kotlinx-serialization'
		dependencies {
			//implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"
			// osgi
			implementation 'org.eclipse:osgi:3.10.0-v20140606-1445'
			// immutable data structures
			implementation 'com.diffplug.durian:durian-collect:1.2.0'
			// testing
			testImplementation 'junit:junit:4.12'
		}


	} else if (it.name == 'plug-test-harness') {
		ext.maven_name='DiffPlug Plugin Runtime'
		ext.maven_desc='Runtime for the DiffPlug Plugin System'

		String VER_DURIAN = '1.2.0'
		dependencies {
			api "org.junit.jupiter:junit-jupiter-api:${VER_JUNIT_JUPITER}"
			implementation "com.diffplug.durian:durian-core:${VER_DURIAN}"
			implementation "com.diffplug.durian:durian-concurrent:${VER_DURIAN}"
			implementation "com.diffplug.durian:durian-collect:${VER_DURIAN}"
		}
	} else if (it.name == 'plug-plugin-gradle') {
		ext.maven_name='DiffPlug Plugin Runtime'
		ext.maven_desc='Runtime for the DiffPlug Plugin System'

		apply from: 干.file('base/gradle-plugin.gradle')
		dependencies {
			// javaexec
			implementation 'com.diffplug.gradle:goomph:3.9.0'
			// asm
			implementation 'org.ow2.asm:asm:6.0'
			// testing
			testImplementation 'junit:junit:4.12'
		}
	} else {
		throw new IllegalArgumentException("Unexpected project " + it.name)
	}
	// it all needs to get published and formatted
	apply from: 干.file('base/maven.gradle')
	apply from: 干.file('base/sonatype.gradle')
}
